{"version":3,"sources":["components/OkJsonArray/index.tsx","utils/common.ts","utils/filter.ts","components/OkJsonString/index.tsx","components/OkJsonBoolean/index.tsx","components/OkJsonNumber/index.tsx","components/OkJsonObject/index.tsx","components/RenderBlock/index.tsx","components/Viewer/index.tsx","components/Toolbar/index.tsx","utils/model.ts","App.tsx","index.tsx"],"names":["OkJsonArray","key","data","children","React","useState","closed","setClosed","buttonClassName","valueClassName","className","type","onClick","identity","x","update","path","value","obj","isArray","Array","nextObj","concat","length","idx","nextPath","slice","nextValue","isHit","filter","toString","toLowerCase","includes","getHitPaths","fn","fns","reduce","result","C","findHits","flatMap","nestedValue","index","Object","entries","xs","map","replace","OkJsonString","hasHighlight","OkJsonBoolean","OkJsonNumber","OkJsonObject","RenderBlock","nestedKey","Viewer","visibleData","segment","parts","split","oldParts","res","i","isFinal","parent","acc","op","part","container","oldValue","oldPartsWithValue","pop","push","pickByPath","visibleDataSection","Math","random","substring","Toolbar","setFilter","name","onChange","e","target","parseDataItem","Boolean","Number","isNaN","parseType","objValue","parseDataModel","parsedValue","mockJson","a","b","is_this","c","d","App","setData","error","setError","navigator","clipboard","readText","then","text","JSON","parse","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.073a49e9.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  data: {\n    key: string,\n  },\n  children: React.ReactNode\n};\n\nconst OkJsonArray = ({ data: { key }, children }: Props) => {\n  const [closed, setClosed] = React.useState<boolean>(false);\n\n  const buttonClassName = closed\n    ? 'Ok-closable-button Ok-closable-button-closed'\n    : 'Ok-closable-button Ok-closable-button-open';\n\n  const valueClassName = closed\n    ? 'Ok-value Ok-Array-value closed'\n    : 'Ok-value Ok-Array-value open';\n\n  return (\n    <div className=\"Ok-block Ok-Array-block\">\n      <div className=\"Ok-key Ok-Array-key\">\n        <button className={buttonClassName} type=\"button\" onClick={() => setClosed(!closed)}>{key}</button>\n      </div>\n      <div className={valueClassName}>\n        <span className=\"Ok-Array-bracket-open\">[</span>\n        {closed ? ' ... ' : children}\n        <span className=\"Ok-Array-bracket-close\">]</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonArray;\n","export const identity = (x: any): any => x;\n\nexport const not = (x: any): boolean => !x;\n\nexport const doto = (method: string, ...args: any) => (x: any) => x[method](...args);\n\nexport const pipe = (x: any, ...fns: Array<Function>) => (\n  fns.reduce((result, fn) => fn(result), x)\n);\n\nexport const filter = (fn: (x: any) => boolean) => (xs: Array<any>) => xs.filter(fn);\n\nexport const map = (fn: (x: any) => any) => (xs: Array<any>) => xs.map(fn);\n\nexport const update = (path: Array<string>, value: any, obj: any): any => {\n  const isArray = Array.isArray(obj);\n  const nextObj = isArray ? [].concat(obj) : { ...obj };\n\n  if (path.length === 0) {\n    return nextObj;\n  }\n\n  const idx = path[0];\n  const nextPath = path.slice(1, path.length);\n\n  if (path.length > 1) {\n    if (isArray) {\n      const nextValue = update(nextPath, value, nextObj[idx]);\n      nextObj[idx] = nextValue;\n      return nextObj;\n    }\n\n    return { ...nextObj, [idx]: update(nextPath, value, nextObj[idx]) };\n  }\n\n  if (isArray) {\n    nextObj[idx] = value;\n    return nextObj;\n  }\n\n  return { ...nextObj, [idx]: value };\n};\n\nexport const generateId: () => string = () => Math.random().toString(36).substring(2, 15);\n","import { Filter, OkJsonValue } from '../types';\nimport * as C from './common';\n\nexport const isHit = (value: string | boolean | number = '', filter: Filter = { value: '' }): boolean => (\n  value.toString().toLowerCase().includes(filter.value.toLowerCase())\n);\n\nexport const getHitPaths = (data: OkJsonValue, filter: Filter): Array<string> => {\n  function findHits(value: OkJsonValue, path: string = ''): Array<string | null> {\n    switch (value.type) {\n      case 'string':\n      case 'boolean':\n      case 'number':\n        return [isHit(value.value, filter) ? path : null];\n      case 'array':\n        return value.value.flatMap((nestedValue, index) => findHits(nestedValue, `${path}.${index}`));\n      case 'object':\n        return Object.entries(value.value).flatMap(([key, nestedValue]) => findHits(nestedValue, `${path}.${key}`));\n      default:\n        return [null];\n    }\n  }\n\n  const removeDotPrefix = (x: string) => x.replace(/^\\./, '');\n\n  const hitPaths = C.pipe(\n    findHits(data),\n    C.filter(C.identity),\n    C.map(removeDotPrefix),\n  );\n\n  return hitPaths;\n};\n\nexport const pickByPath = (data: OkJsonValue, path: Array<string>): Array<OkJsonValue> => {\n  if (!path || !path.length) {\n    return [data];\n  }\n\n  // here be monsters..\n  const paths = path.map((segment: string) => {\n    const parts = segment.split('.');\n    const oldParts: any[] = [];\n    let res: OkJsonValue = {} as OkJsonValue;\n\n    for (let i = 0; i < parts.length; i += 1) {\n      const isFinal = (i === parts.length - 1);\n      const parent = oldParts.reduce((acc, op) => acc.value[op], data);\n      const part = parts[i];\n      const container = parent.type === 'array' ? [] : {};\n      let oldValue;\n      if (isFinal) {\n        oldValue = {\n          type: parent.type,\n          value: (parent.type === 'array' ? [parent.value[part]] : { [part]: parent.value[part] }),\n        };\n      } else {\n        oldValue = { type: parent.type, value: container };\n      }\n\n      const oldPartsWithValue = oldParts.reduce((acc, op) => acc.concat([op, 'value']), ['value']);\n      if (oldParts.length) oldPartsWithValue.pop();\n      if (i === 0) res = <OkJsonValue>oldValue;\n      else res = C.update(oldPartsWithValue, oldValue, res);\n      oldParts.push(parts[i]);\n    }\n    return res;\n  });\n\n  return paths;\n};\n","import React from 'react';\nimport { isHit } from '../../utils/filter';\n\nimport { OkJsonValue, Filter } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  filter: Filter\n};\n\nconst OkJsonString: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const hasHighlight = filter.value && isHit(value.value as boolean, filter);\n  const valueClassName = `Ok-value Ok-String-value ${hasHighlight ? 'Ok-highlighted-value' : ''}`;\n  return (\n    <div className=\"Ok-block Ok-String-block\">\n      <div className=\"Ok-key Ok-String-key\">\n        {key}\n      </div>\n      <div className={valueClassName}>\n        &quot;\n        {value.value}\n        &quot;\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonString;\n","import React from 'react';\n\nimport { isHit } from '../../utils/filter';\nimport { OkJsonValue, Filter } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  filter: Filter\n};\n\nconst OkJsonBoolean: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const hasHighlight = filter.value && isHit(value.value as boolean, filter);\n  const valueClassName = `Ok-value Ok-Boolean-value ${hasHighlight ? 'Ok-highlighted-value' : ''}`;\n  return (\n    <div className=\"Ok-block Ok-Boolean-block\">\n      <div className=\"Ok-key Ok-Boolean-key\">\n        {key}\n      </div>\n      <div className={valueClassName}>\n        {value.value.toString()}\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonBoolean;\n","import React from 'react';\n\nimport { isHit } from '../../utils/filter';\nimport { OkJsonValue, Filter } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  filter: Filter\n};\n\nconst OkJsonNumber: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const hasHighlight = filter.value && isHit(value.value as boolean, filter);\n  const valueClassName = `Ok-value Ok-Number-value ${hasHighlight ? 'Ok-highlighted-value' : ''}`;\n  return (\n    <div className=\"Ok-block Ok-Number-block\">\n      <div className=\"Ok-key Ok-Number-key\">\n        {key}\n      </div>\n      <div className={valueClassName}>\n        {value.value}\n      </div>\n    </div>\n  );\n};\nexport default OkJsonNumber;\n","import React from 'react';\n\ntype Props = {\n  data: {\n    key: string,\n  },\n  children: React.ReactNode\n};\n\nconst OkJsonObject = ({ children, data: { key } }: Props) => {\n  const [closed, setClosed] = React.useState<boolean>(false);\n\n  const buttonClassName = closed\n    ? 'Ok-closable-button Ok-closable-button-closed'\n    : 'Ok-closable-button Ok-closable-button-open';\n\n  const valueClassName = closed\n    ? 'Ok-value Ok-Object-value closed'\n    : 'Ok-value Ok-Object-value open';\n\n  return (\n    <div className=\"Ok-block Ok-Object-block\">\n      {key ? (\n        <div className=\"Ok-key Ok-Object-key\">\n          <button\n            className={buttonClassName}\n            type=\"button\"\n            onClick={() => setClosed(!closed)}\n          >\n            {key}\n          </button>\n        </div>\n      ) : null}\n      <div className={valueClassName}>\n        <span className=\"Ok-Object-bracket-open\">{'{'}</span>\n        {closed ? ' ... ' : children}\n        <span className=\"Ok-Object-bracket-close\">{'}'}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonObject;\n","\nimport React from 'react';\nimport OkJsonArray from '../OkJsonArray';\nimport OkJsonString from '../OkJsonString';\nimport OkJsonBoolean from '../OkJsonBoolean';\nimport OkJsonNumber from '../OkJsonNumber';\nimport OkJsonObject from '../OkJsonObject';\n\nimport { OkJsonValue, Filter } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: any\n  },\n  filter: Filter\n};\n\nconst RenderBlock: React.SFC<Props> = ({ data: { key, value }, filter }) => (\n  <div className=\"Ok-Json-body\">\n    {(() => {\n      switch (value.type) {\n        case 'string':\n          return <OkJsonString key={key} data={{ key, value }} filter={filter} />;\n        case 'boolean':\n          return <OkJsonBoolean key={key} data={{ key, value }} filter={filter} />;\n        case 'number':\n          return <OkJsonNumber key={key} data={{ key, value }} filter={filter} />;\n        case 'array':\n          return (\n            <OkJsonArray data={{ key }}>\n              {value.value.map((nestedValue: OkJsonValue, index: number) => (\n                <RenderBlock\n                  key={index.toString()}\n                  filter={filter}\n                  data={{ key: index.toString(), value: nestedValue }}\n                />\n              ))}\n            </OkJsonArray>\n          );\n\n        case 'object':\n          return (\n            <OkJsonObject data={{ key }}>\n              {Object.entries(value.value).map(([nestedKey, nestedValue]) => (\n                <RenderBlock\n                  key={nestedKey}\n                  filter={filter}\n                  data={{ key: nestedKey, value: nestedValue }}\n                />\n              ))}\n            </OkJsonObject>\n          );\n        default:\n          return null;\n      }\n    })()}\n  </div>\n);\n\nexport default RenderBlock;\n","import React from 'react';\nimport RenderBlock from '../RenderBlock';\n\nimport { getHitPaths, pickByPath } from '../../utils/filter';\nimport { generateId } from '../../utils/common';\n\nimport { Filter, OkJsonValue } from '../../types';\n\nimport './Viewer.css';\n\ntype Props = {\n  data: OkJsonValue,\n  filter: Filter\n};\n\nconst Viewer: React.SFC<Props> = ({ data, filter }) => {\n  const visibleData: Array<OkJsonValue> = (filter.value)\n    ? pickByPath(data, getHitPaths(data, filter))\n    : [data];\n\n  return (\n    <div>\n      {visibleData.map((visibleDataSection) => (\n        <div key={generateId()} className=\"App-Viewer-body\">\n          <RenderBlock data={{ key: '', value: visibleDataSection }} filter={filter} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\nimport { Filter } from '../../types';\n\ntype Props = {\n  filter: Filter,\n  setFilter: Function\n};\n\nconst Toolbar = ({ filter, setFilter }: Props) => (\n  <div>\n    <input type=\"text\" name=\"filter\" onChange={(e) => setFilter({ value: e.target.value })} value={filter.value} />\n  </div>\n);\n\n\nexport default Toolbar;\n","/* eslint-disable import/prefer-default-export */\nimport { OkJsonObject, OkJsonValue, ResultType } from '../types';\n\nconst parseType = (value: any): ResultType => {\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n\n  if (typeof value === 'string') {\n    return 'string';\n  }\n\n  if (Boolean(value) === value) {\n    return 'boolean';\n  }\n\n  if (!Number.isNaN(Number(value))) {\n    return 'number';\n  }\n\n  return 'object';\n};\n\nconst parseDataItem = (value: any): OkJsonValue => {\n  const type = parseType(value);\n\n  if (type === 'array') {\n    return {\n      type,\n      value: value.map(parseDataItem),\n    };\n  }\n\n  if (type === 'object') {\n    return {\n      type,\n      value: Object\n        .entries(value)\n        .reduce((result, [key, objValue]) => ({\n          ...result,\n          [key]: parseDataItem(objValue),\n        }), {}),\n    };\n  }\n\n  return {\n    type,\n    value,\n  };\n};\n\nexport const parseDataModel = (data: object): OkJsonValue => {\n  const resultObject: OkJsonObject = Object.entries(data).reduce((result, [key, value]) => {\n    const parsedValue = parseDataItem(value);\n\n    return {\n      ...result,\n      [key]: parsedValue,\n    };\n  }, {});\n\n  return { type: 'object', value: resultObject };\n};\n","import React from 'react';\nimport Viewer from './components/Viewer';\nimport Toolbar from './components/Toolbar';\n\nimport { parseDataModel } from './utils/model';\nimport { Filter, OkJsonValue } from './types';\n\nimport './App.css';\n\nconst mockJson = parseDataModel({\n  a: {\n    b: [\n      1,\n      { is_this: true },\n      'abc def',\n    ],\n    c: 99,\n  },\n  d: {\n    e: 12,\n  },\n});\n\nfunction App() {\n  const [data, setData] = React.useState<OkJsonValue | null>(mockJson);\n  const [error, setError] = React.useState<string | null>(null);\n  const [filter, setFilter] = React.useState<Filter>({ value: '' });\n\n  const pasteFromClipboard = () => {\n    navigator.clipboard.readText()\n      .then((text) => {\n        try {\n          setError(null);\n          setData(parseDataModel(JSON.parse(text)));\n        } catch (e) {\n          setError('That does not look like json...');\n        }\n      })\n      .catch(() => setError('You really need to give the permission for this one...'));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Feed me JSON!\n        {error ? <span className=\"App-error\">{error}</span> : null}\n        <Toolbar filter={filter} setFilter={setFilter} />\n      </header>\n      <main className=\"App-body\">\n        {data\n          ? <Viewer data={data} filter={filter} />\n          : <button type=\"button\" onClick={pasteFromClipboard}>Paste from clipboard</button>}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
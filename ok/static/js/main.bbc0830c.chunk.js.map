{"version":3,"sources":["components/OkJsonArray/index.tsx","components/OkJsonString/index.tsx","components/OkJsonNull/index.tsx","components/OkJsonBoolean/index.tsx","components/OkJsonNumber/index.tsx","components/OkJsonObject/index.tsx","components/RenderBlock/index.tsx","utils/common.ts","utils/path.ts","components/Viewer/index.tsx","utils/model.ts","components/DataInput/index.tsx","utils/filter.ts","components/Toolbar/index.tsx","App.tsx","index.tsx"],"names":["OkJsonArray","data","key","value","filter","children","React","useState","closed","setClosed","buttonClassName","valueClassName","keyMatch","matches","destinationHighlight","match","segmentHighlight","keyClassName","className","type","onClick","OkJsonString","valueHighlight","keyHighlight","keySegmentHighlight","OkJsonNull","OkJsonBoolean","toString","OkJsonNumber","OkJsonObject","RenderBlock","props","hasMatch","parentMatches","isRoot","map","nestedValue","index","Object","entries","nestedKey","identity","x","noop","updateValue","newValue","oldValue","update","path","obj","isArray","Array","nextObj","concat","length","idx","nextPath","slice","nextValue","lastSegment","str","arr","split","getHitPaths","fn","fns","reduce","result","C","findHits","flatMap","xs","replace","markMatches","paths","segmentPaths","from","start","i","j","pathArray","acc","segment","destinationPaths","updateFn","segments","segmentPath","destinationPath","Viewer","visibleData","hasValue","visibleDataSection","Math","random","substring","parseDataItem","Boolean","Number","isNaN","parseType","objValue","parseDataModel","parsedValue","mockJson","bigObject","cute_array","is_this","c","id","smallObject","e","straightText","big_number","false","very","nested","and","surprisingly","boring","object","DataInput","setError","setData","bigBox","useRef","internetUrl","loadFromUrl","a","current","fetch","response","json","canPaste","navigator","clipboard","readText","then","text","JSON","parse","catch","ref","placeholder","defaultQuery","flags","ignoreCase","matchCase","Filter","query","this","parseSearchString","hay","needle","indexOf","toLowerCase","Toolbar","setFilter","inputValue","setInputValue","firstMount","useEffect","interval","setTimeout","clearTimeout","onChange","target","initialFilter","App","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbc0830c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { OkJsonValue, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue,\n  },\n  children: React.ReactNode,\n  filter: FilterType\n};\n\nconst OkJsonArray = ({ data: { key, value }, filter, children }: Props) => {\n  const [closed, setClosed] = React.useState<boolean>(false);\n\n  const buttonClassName = closed\n    ? 'Ok-closable-button Ok-closable-button-closed'\n    : 'Ok-closable-button Ok-closable-button-open';\n\n  const valueClassName = closed\n    ? 'Ok-value Ok-Array-value closed'\n    : 'Ok-value Ok-Array-value open';\n\n  const keyMatch = filter.matches(key);\n  const destinationHighlight = value.match === 'destination' && keyMatch;\n  const segmentHighlight = value.match === 'segment' || (value.match === 'destination' && !keyMatch);\n  const keyClassName = `Ok-key Ok-Array-key ${destinationHighlight ? 'Ok-highlighted-key' : ''} ${segmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-Array-block\">\n      <div className={keyClassName}>\n        <button className={buttonClassName} type=\"button\" onClick={() => setClosed(!closed)}>{key}</button>\n      </div>\n      <div className={valueClassName}>\n        <span className=\"Ok-Array-bracket-open\">[</span>\n        {closed ? ' ... ' : children}\n        <span className=\"Ok-Array-bracket-close\">]</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonArray;\n","import React from 'react';\n\nimport { OkJsonValue, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  filter: FilterType\n};\n\nconst OkJsonString: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const valueHighlight = value.match === 'destination' && filter.matches(value.value);\n  const valueClassName = `Ok-value Ok-String-value ${valueHighlight ? 'Ok-highlighted-value' : ''}`;\n\n  const keyMatch = filter.matches(key);\n  const keyHighlight = value.match === 'destination' && keyMatch;\n  const keySegmentHighlight = value.match === 'destination' && !keyMatch;\n  const keyClassName = `Ok-key Ok-String-key ${keyHighlight ? 'Ok-highlighted-key' : ''} ${keySegmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-String-block\">\n      <div className={keyClassName}>\n        {key}\n      </div>\n      <div className={valueClassName}>\n        &quot;\n        {value.value}\n        &quot;\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonString;\n","import React from 'react';\n\nimport { OkJsonNullPrimitive, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonNullPrimitive\n  },\n  filter: FilterType\n};\n\nconst OkJsonNull: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const valueHighlight = value.match === 'destination' && filter.matches(value.value as null);\n  const valueClassName = `Ok-value Ok-Null-value ${valueHighlight ? 'Ok-highlighted-value' : ''}`;\n\n  const keyMatch = filter.matches(key);\n  const keyHighlight = value.match === 'destination' && keyMatch;\n  const keySegmentHighlight = value.match === 'destination' && !keyMatch;\n  const keyClassName = `Ok-key Ok-Null-key ${keyHighlight ? 'Ok-highlighted-key' : ''} ${keySegmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-Null-block\">\n      <div className={keyClassName}>\n        {key}\n      </div>\n      <div className={valueClassName}>\n        null\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonNull;\n","import React from 'react';\n\nimport { OkJsonBooleanPrimitive, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonBooleanPrimitive\n  },\n  filter: FilterType\n};\n\nconst OkJsonBoolean: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const valueHighlight = value.match === 'destination' && filter.matches(value.value as boolean);\n  const valueClassName = `Ok-value Ok-Boolean-value ${valueHighlight ? 'Ok-highlighted-value' : ''}`;\n\n  const keyMatch = filter.matches(key);\n  const keyHighlight = value.match === 'destination' && keyMatch;\n  const keySegmentHighlight = value.match === 'destination' && !keyMatch;\n  const keyClassName = `Ok-key Ok-Boolean-key ${keyHighlight ? 'Ok-highlighted-key' : ''} ${keySegmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-Boolean-block\">\n      <div className={keyClassName}>\n        {key}\n      </div>\n      <div className={valueClassName}>\n        {value.value.toString()}\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonBoolean;\n","import React from 'react';\n\nimport { OkJsonValue, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  filter: FilterType\n};\n\nconst OkJsonNumber: React.FC<Props> = ({ data: { key, value }, filter }) => {\n  const valueHighlight = value.match === 'destination' && filter.matches(value.value as number);\n  const valueClassName = `Ok-value Ok-Number-value ${valueHighlight ? 'Ok-highlighted-value' : ''}`;\n\n  const keyMatch = filter.matches(key);\n  const keyHighlight = value.match === 'destination' && keyMatch;\n  const keySegmentHighlight = value.match === 'destination' && !keyMatch;\n  const keyClassName = `Ok-key Ok-Number-key ${keyHighlight ? 'Ok-highlighted-key' : ''} ${keySegmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-Number-block\">\n      <div className={keyClassName}>\n        {key}\n      </div>\n      <div className={valueClassName}>\n        {value.value}\n      </div>\n    </div>\n  );\n};\nexport default OkJsonNumber;\n","import React from 'react';\n\nimport { OkJsonValue, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: OkJsonValue\n  },\n  children: React.ReactNode,\n  filter: FilterType\n};\n\nconst OkJsonObject = ({ children, data: { key, value }, filter }: Props) => {\n  const [closed, setClosed] = React.useState<boolean>(false);\n\n  const buttonClassName = closed\n    ? 'Ok-closable-button Ok-closable-button-closed'\n    : 'Ok-closable-button Ok-closable-button-open';\n\n  const valueClassName = closed\n    ? 'Ok-value Ok-Object-value closed'\n    : 'Ok-value Ok-Object-value open';\n\n  const destinationHighlight = value.match === 'destination' && filter.matches(key);\n  const segmentHighlight = value.match === 'segment' || (value.match === 'destination' && !filter.matches(key));\n  const keyClassName = `Ok-key Ok-Object-key ${destinationHighlight ? 'Ok-highlighted-key' : ''} ${segmentHighlight ? 'Ok-highlighted-key-segment' : ''}`;\n\n  return (\n    <div className=\"Ok-block Ok-Object-block\">\n      {key ? (\n        <div className={keyClassName}>\n          <button\n            className={buttonClassName}\n            type=\"button\"\n            onClick={() => setClosed(!closed)}\n          >\n            {key}\n          </button>\n        </div>\n      ) : null}\n      <div className={valueClassName}>\n        <span className=\"Ok-Object-bracket-open\">{'{'}</span>\n        {closed ? ' ... ' : children}\n        <span className=\"Ok-Object-bracket-close\">{'}'}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OkJsonObject;\n","\nimport React from 'react';\nimport OkJsonArray from '../OkJsonArray';\nimport OkJsonString from '../OkJsonString';\nimport OkJsonNull from '../OkJsonNull';\nimport OkJsonBoolean from '../OkJsonBoolean';\nimport OkJsonNumber from '../OkJsonNumber';\nimport OkJsonObject from '../OkJsonObject';\n\nimport { OkJsonValue, FilterType } from '../../types';\n\ntype Props = {\n  data: {\n    key: string,\n    value: any\n  },\n  filter: FilterType,\n  hasMatch: boolean,\n  parentMatches?: boolean,\n  isRoot?: boolean\n};\n\nconst RenderBlock: React.SFC<Props> = (props) => {\n  const {\n    data: { key, value }, filter, hasMatch, parentMatches, isRoot,\n  } = props;\n\n\n  return (\n    <div className=\"Ok-Json-body\">\n      {(() => {\n        if (!isRoot && hasMatch && (value.match === 'no-match') && !parentMatches) {\n          return null;\n        }\n\n        switch (value.type) {\n          case 'string':\n            return <OkJsonString key={key} data={{ key, value }} filter={filter} />;\n          case 'null':\n            return <OkJsonNull key={key} data={{ key, value }} filter={filter} />;\n          case 'boolean':\n            return <OkJsonBoolean key={key} data={{ key, value }} filter={filter} />;\n          case 'number':\n            return <OkJsonNumber key={key} data={{ key, value }} filter={filter} />;\n          case 'array':\n            return (\n              <OkJsonArray data={{ key, value }} filter={filter}>\n                {value.value.map((nestedValue: OkJsonValue, index: number) => (\n                  <RenderBlock\n                    key={index.toString()}\n                    hasMatch={hasMatch}\n                    parentMatches={value.match && value.match !== 'no-match'}\n                    filter={filter}\n                    data={{ key: index.toString(), value: nestedValue }}\n                  />\n                ))}\n              </OkJsonArray>\n            );\n\n          case 'object':\n            return (\n              <OkJsonObject data={{ key, value }} filter={filter}>\n                {Object.entries(value.value).map(([nestedKey, nestedValue]) => (\n                  <RenderBlock\n                    key={nestedKey}\n                    hasMatch={hasMatch}\n                    parentMatches={value.match && value.match !== 'no-match'}\n                    filter={filter}\n                    data={{ key: nestedKey, value: nestedValue }}\n                  />\n                ))}\n              </OkJsonObject>\n            );\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n};\n\nexport default RenderBlock;\n","export const identity = (x: any): any => x;\n\nexport const noop = (): void => { };\n\nexport const not = (x: any): boolean => !x;\n\nexport const doto = (method: string, ...args: any) => (x: any) => x[method](...args);\n\nexport const pipe = (x: any, ...fns: Array<Function>) => (\n  fns.reduce((result, fn) => fn(result), x)\n);\n\nexport const filter = (fn: (x: any) => boolean) => (xs: Array<any>) => xs.filter(fn);\n\nexport const map = (fn: (x: any) => any) => (xs: Array<any>) => xs.map(fn);\n\nexport const last = (arr: Array<any>): any => arr[arr.length - 1];\n\nconst updateValue = (newValue: any, oldValue: any) => ((typeof newValue === 'function')\n  ? newValue(oldValue)\n  : newValue);\n\nexport const update = (path: Array<string>, value: any, obj: any): any => {\n  const isArray = Array.isArray(obj);\n  const nextObj = isArray ? [].concat(obj) : { ...obj };\n\n  if (path.length === 0) {\n    return nextObj;\n  }\n\n  const idx = path[0];\n  const nextPath = path.slice(1, path.length);\n\n  if (path.length > 1) {\n    if (isArray) {\n      const nextValue = update(nextPath, value, nextObj[idx]);\n      nextObj[idx] = nextValue;\n      return nextObj;\n    }\n\n    return { ...nextObj, [idx]: update(nextPath, value, nextObj[idx]) };\n  }\n\n  if (isArray) {\n    nextObj[idx] = updateValue(value, nextObj[idx]);\n    return nextObj;\n  }\n\n  return { ...nextObj, [idx]: updateValue(value, nextObj[idx]) };\n};\n\nexport const generateId: () => string = () => Math.random().toString(36).substring(2, 15);\n\nexport const segmentize = (arr: Array<string>): Array<Array<string>> => {\n  const result: Array<Array<string>> = Array.from({ length: arr.length });\n  let start = 0;\n  for (let i = 0; i < arr.length; i += 1) {\n    for (let j = start; j < arr.length; j += 1) {\n      result[j] = (result[j] || []).concat(arr[i]);\n    }\n    start += 1;\n  }\n  return result;\n};\n","import { FilterType, OkJsonValue, MatchType } from '../types';\nimport * as C from './common';\n\nconst lastSegment = (str: string): string => C.last(str.split('.'));\n\nexport const getHitPaths = (data: OkJsonValue, filter: FilterType): Array<string> => {\n  function findHits(value: OkJsonValue, path: string = ''): Array<string | null> {\n    switch (value.type) {\n      case 'string':\n      case 'boolean':\n      case 'number':\n      case 'null':\n        return [filter.matches(`${lastSegment(path)} ${value.value}`) ? path : null];\n      case 'array':\n        return [filter.matches(lastSegment(path)) ? path : null].concat(\n          value.value.flatMap((nestedValue, index) => findHits(nestedValue, `${path}.${index}`)),\n        );\n      case 'object':\n        return [filter.matches(lastSegment(path)) ? path : null].concat(\n          Object.entries(value.value).flatMap(([key, nestedValue]) => findHits(nestedValue, `${path}.${key}`)),\n        );\n      default:\n        return [null];\n    }\n  }\n\n  const removeDotPrefix = (x: string) => x.replace(/^\\./, '');\n\n  const hitPaths = C.pipe(\n    findHits(data),\n    C.filter(C.identity),\n    C.map(removeDotPrefix),\n  );\n\n  return hitPaths;\n};\n\nexport const markMatches = (paths: Array<string>, data: OkJsonValue): OkJsonValue => {\n  const segmentPaths = paths.flatMap((path) => C.segmentize(path.split('.')))\n    .map((pathArray) => pathArray.reduce<Array<string>>((acc, segment) => acc.concat(['value', segment]), []));\n\n  const destinationPaths = paths.map((pathArray) => (\n    pathArray\n      .split('.')\n      .reduce<Array<string>>((acc, segment) => acc.concat(['value', segment]), [])\n  ));\n\n  const updateFn = (newValue: MatchType) => (oldValue: object) => (\n    { ...oldValue, match: newValue }\n  );\n\n  const segments = segmentPaths.reduce(\n    (acc, segmentPath) => C.update(segmentPath, updateFn('segment'), acc),\n    { ...data },\n  );\n\n  const destinations = destinationPaths.reduce(\n    (acc, destinationPath) => C.update(destinationPath, updateFn('destination'), acc),\n    { ...segments },\n  );\n\n  return destinations;\n};\n\nexport const pickByPath = (data: OkJsonValue, path: Array<string>): Array<OkJsonValue> => {\n  if (!path || !path.length) {\n    return [data];\n  }\n\n  // here be monsters..\n  const paths = path.map((segment: string) => {\n    const parts = segment.split('.');\n    const oldParts: any[] = [];\n    let res: OkJsonValue = {} as OkJsonValue;\n\n    for (let i = 0; i < parts.length; i += 1) {\n      const isFinal = (i === parts.length - 1);\n      const parent = oldParts.reduce((acc, op) => acc.value[op], data);\n      const part = parts[i];\n      const container = parent.type === 'array' ? [] : {};\n      let oldValue;\n      if (isFinal) {\n        oldValue = {\n          type: parent.type,\n          value: (parent.type === 'array' ? [parent.value[part]] : { [part]: parent.value[part] }),\n        };\n      } else {\n        oldValue = { type: parent.type, value: container };\n      }\n\n      const oldPartsWithValue = oldParts.reduce((acc, op) => acc.concat([op, 'value']), ['value']);\n      if (oldParts.length) oldPartsWithValue.pop();\n      if (i === 0) res = <OkJsonValue>oldValue;\n      else res = C.update(oldPartsWithValue, oldValue, res);\n      oldParts.push(parts[i]);\n    }\n    return res;\n  });\n\n  return paths;\n};\n","import React from 'react';\nimport RenderBlock from '../RenderBlock';\n\nimport { getHitPaths, markMatches } from '../../utils/path';\nimport { generateId } from '../../utils/common';\n\nimport { FilterType, OkJsonValue } from '../../types';\n\nimport './Viewer.css';\n\ntype Props = {\n  data: OkJsonValue,\n  filter: FilterType\n};\n\nconst Viewer: React.SFC<Props> = ({ data, filter }) => {\n  const visibleData: Array<OkJsonValue> = (filter.hasValue())\n    ? [markMatches(getHitPaths(data, filter), data)]\n    : [data];\n\n  return (\n    <div>\n      {visibleData.map((visibleDataSection) => (\n        <div key={generateId()} className=\"App-Viewer-body\">\n          <RenderBlock\n            isRoot\n            data={{ key: '', value: visibleDataSection }}\n            filter={filter}\n            hasMatch={filter.hasValue()}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Viewer;\n","/* eslint-disable import/prefer-default-export */\nimport { OkJsonObject, OkJsonValue, ResultType } from '../types';\n\nconst parseType = (value: any): ResultType => {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n\n  if (typeof value === 'string') {\n    return 'string';\n  }\n\n  if (Boolean(value) === value) {\n    return 'boolean';\n  }\n\n  if (!Number.isNaN(Number(value))) {\n    return 'number';\n  }\n\n  return 'object';\n};\n\nconst parseDataItem = (value: any): OkJsonValue => {\n  const type = parseType(value);\n\n  if (type === 'array') {\n    return {\n      type,\n      match: 'no-match',\n      value: value.map(parseDataItem),\n    };\n  }\n\n  if (type === 'object') {\n    return {\n      type,\n      match: 'no-match',\n      value: Object\n        .entries(value)\n        .reduce((result, [key, objValue]) => ({\n          ...result,\n          [key]: parseDataItem(objValue),\n        }), {}),\n    };\n  }\n\n  return {\n    type,\n    value,\n    match: 'no-match',\n  };\n};\n\nexport const parseDataModel = (data: object): OkJsonValue => {\n  const resultObject: OkJsonObject = Object.entries(data).reduce((result, [key, value]) => {\n    const parsedValue = parseDataItem(value);\n\n    return {\n      ...result,\n      [key]: parsedValue,\n    };\n  }, {});\n\n  return { type: 'object', value: resultObject };\n};\n","import React from 'react';\n\nimport { parseDataModel } from '../../utils/model';\n\nimport { OkJsonValue } from '../../types';\n\nimport './DataInput.css';\n\ntype Props = {\n  setError: React.Dispatch<React.SetStateAction<string | null>>,\n  setData: React.Dispatch<React.SetStateAction<OkJsonValue | null>>\n};\n\nconst mockJson = parseDataModel({\n  bigObject: {\n    cute_array: [\n      1,\n      { is_this: true },\n      'or is this',\n      null,\n    ],\n    c: 99,\n    id: '0xdeaddaed',\n  },\n  smallObject: {\n    e: 12,\n  },\n  straightText: 'Oh boy! A well.',\n  big_number: 1234567890,\n  false: false,\n  very: { nested: { and: { surprisingly: { boring: { object: true } } } } },\n});\n\nconst DataInput = ({ setError, setData }: Props) => {\n  const bigBox = React.useRef<HTMLTextAreaElement>(null);\n  const internetUrl = React.useRef<HTMLInputElement>(null);\n\n  const pasteFromClipboard = () => {\n    navigator.clipboard.readText()\n      .then((text) => {\n        try {\n          setError(null);\n          setData(parseDataModel(JSON.parse(text)));\n        } catch (e) {\n          setError('That does not look like json...');\n        }\n      })\n      .catch(() => setError('You really need to give the permission for this one...'));\n  };\n\n  const useMockData = () => {\n    setError(null);\n    setData(mockJson);\n  };\n\n  const loadFromBigBox = () => {\n    setError(null);\n    if (bigBox && bigBox.current) {\n      try {\n        setData(parseDataModel(JSON.parse(bigBox.current.value)));\n      } catch (e) {\n        setError('That does not look like json...');\n      }\n    }\n  };\n\n  const loadFromUrl = async () => {\n    setError(null);\n    if (internetUrl && internetUrl.current && internetUrl.current.value) {\n      try {\n        const response = await fetch(internetUrl.current.value);\n        setData(parseDataModel(await response.json()));\n      } catch (e) {\n        setError(`Oh no, not ${internetUrl.current.value}.`);\n      }\n    }\n  };\n\n  const canPaste = !!navigator.clipboard.readText;\n\n  return (\n    <div className=\"DataInput-main\">\n      <button type=\"button\" onClick={useMockData}>Use Mock Data</button>\n      {canPaste\n        ? <button type=\"button\" onClick={pasteFromClipboard}>Paste from clipboard</button>\n        : null}\n      <textarea ref={bigBox} placeholder=\"Or just read from here...\" />\n      <button type=\"button\" onClick={loadFromBigBox}>Load from the big box</button>\n      <input ref={internetUrl} type=\"text\" placeholder=\"url\" />\n      <button type=\"button\" onClick={loadFromUrl}>\n        Load from\n        {' '}\n        <i>the internet</i>\n      </button>\n    </div>\n  );\n};\n\nexport default DataInput;\n","import { FilterType, FilterQuery } from '../types';\n\nconst defaultQuery: FilterQuery = {\n  value: '',\n  flags: {\n    ignoreCase: false,\n    matchCase: false,\n  },\n};\n\nexport default class Filter implements FilterType {\n  query: FilterQuery;\n\n  constructor(str: string = '') {\n    this.query = str\n      ? Filter.parseSearchString(str)\n      : defaultQuery;\n  }\n\n  /* eslint-disable no-useless-escape */\n  static parseSearchString(value: string): FilterQuery {\n    const flags = {\n      ignoreCase: value.indexOf('\\\\c') > -1,\n      matchCase: value.indexOf('\\\\C') > -1,\n    };\n\n    const cleanFlags = (str: string): string => str.replace(/\\\\[C|c]/g, '');\n\n    return {\n      value: cleanFlags(value),\n      flags,\n    };\n  }\n  /* eslint-enable no-useless-escape */\n\n  hasValue() {\n    return !!this.query.value;\n  }\n\n  matches(obj: null | string | boolean | number = ''): boolean {\n    if (!this.hasValue()) {\n      return false;\n    }\n\n    if (obj === null) {\n      return this.matches('null');\n    }\n\n    const hay = obj.toString();\n    const needle = this.query.value;\n\n    if (this.query.flags.matchCase) {\n      return hay.indexOf(needle) > -1;\n    } if (this.query.flags.ignoreCase) {\n      return hay.toLowerCase().indexOf(needle.toLowerCase()) > -1;\n    }\n\n    // \"smartCase\" by default\n    return needle !== needle.toLowerCase()\n      ? hay.indexOf(needle) > -1\n      : hay.toLowerCase().indexOf(needle.toLowerCase()) > -1;\n  }\n}\n","import React from 'react';\n\nimport { noop } from '../../utils/common';\nimport Filter from '../../utils/filter';\n\nimport { FilterType } from '../../types';\n\nimport './Toolbar.css';\n\ntype Props = {\n  setFilter: React.Dispatch<React.SetStateAction<FilterType>>\n};\n\nconst DEBOUNCE_VALUE = 300;\n\nconst Toolbar = ({ setFilter }: Props) => {\n  const [inputValue, setInputValue] = React.useState('');\n  const firstMount = React.useRef(true);\n\n  React.useEffect(() => {\n    if (firstMount.current) {\n      firstMount.current = false;\n      return noop;\n    }\n\n    const interval = setTimeout(\n      () => setFilter(new Filter(inputValue)),\n      DEBOUNCE_VALUE,\n    );\n\n    return () => clearTimeout(interval);\n  }, [inputValue]);\n\n  return (\n    <div className=\"Toolbar\">\n      <input\n        className=\"Toolbar-filter\"\n        type=\"text\"\n        placeholder=\"filter\"\n        onChange={(e) => setInputValue(e.target.value)}\n        value={inputValue}\n      />\n    </div>\n  );\n};\n\n\nexport default Toolbar;\n","import React from 'react';\nimport Viewer from './components/Viewer';\nimport DataInput from './components/DataInput';\nimport Toolbar from './components/Toolbar';\n\nimport Filter from './utils/filter';\nimport { FilterType, OkJsonValue } from './types';\n\nimport './App.css';\n\nconst initialFilter = new Filter();\n\nfunction App() {\n  const [data, setData] = React.useState<OkJsonValue | null>(null);\n  const [error, setError] = React.useState<string | null>(null);\n  const [filter, setFilter] = React.useState<FilterType>(initialFilter);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Feed me JSON!\n        {error ? <span className=\"App-error\">{error}</span> : null}\n        {data ? <Toolbar setFilter={setFilter} /> : null}\n      </header>\n      <main className=\"App-body\">\n        {data\n          ? <Viewer data={data} filter={filter} />\n          : <DataInput setData={setData} setError={setError} />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}